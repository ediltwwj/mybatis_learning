<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.mybatis.dao.UserDao">
    <!-- 查询所有 -->
    <select id="findAll" resultType="com.mybatis.domain.User">
        select * from user;
    </select>

    <!-- 保存用户,id自增长 -->
    <insert id="saveUser" parameterType="com.mybatis.domain.User">
        <!-- 配置插入操作后，获取插入数据对应实体类的id名称 -->
        <selectKey keyProperty="id" keyColumn="id" resultType="int" order="AFTER">
            select last_insert_id();
        </selectKey>
        insert into user(username, birthday, sex, address) values(#{username},#{birthday},#{sex},#{address});
    </insert>

    <!-- 更新用户 -->
    <update id="updateUser" parameterType="com.mybatis.domain.User">
        update user set username=#{username}, address=#{address}, sex=#{sex}, birthday=#{birthday} where id=#{id};
    </update>

    <!-- 删除用户 -->
    <!-- parameterType可支持int Integer java.lang.Integer等 -->
    <delete id="deleteUserById" parameterType="java.lang.Integer">
        <!-- 只有一个参数，占位符任意命名 -->
        delete from user where id=#{userid};
    </delete>

    <!-- 根据id查询用户 -->
    <select id="findUserById" parameterType="java.lang.Integer" resultType="com.mybatis.domain.User">
        select * from user where id=#{userid};
    </select>

    <!-- 根据名称模糊查询 -->
    <select id="findUsersByName" parameterType="String" resultType="com.mybatis.domain.User">
        <!-- 使用PreparedStatement的参数占位符 -->
        <!-- 测试类需要给% -->
        select * from user where username like #{username};
        <!-- 使用Statement对象的字符串拼接 -->
        <!-- 测试类就不需要加% -->
        <!-- select * from user where username like '%${value}%' -->
    </select>

    <!-- 获取用户的总记录条数 -->
    <select id="findTotalUserNumber" resultType="int">
        select count(id) from user;
    </select>

    <!-- 根据queryVo的条件查询用户 -->
    <select id="findUserByVo" parameterType="com.mybatis.domain.QueryVo" resultType="com.mybatis.domain.User">
        <!-- {username}被认为是QueryVo中的属性，显然找不到 -->
        <!-- select * from user where username like #{username}; -->
        <!-- {user.username}的user是QueryVo中的属性 -->
        select * from user where username like #{user.username};
    </select>
</mapper>